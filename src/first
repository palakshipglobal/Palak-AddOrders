// "use client";
// import React from "react";
// import { zodResolver } from "@hookform/resolvers/zod";
// import { useForm } from "react-hook-form";
// import { z } from "zod";
// import { Form } from "@/components/ui/form";

// import SimpleFormFields from "./shadcnComponents/SimpleFormFields";
// import { CountrySelect, StateSelect } from "./shadcnComponents/ComboboxDemo";

// const BuyerDetailFormSchema = z.object({
//   pickup_address: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   country: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   state: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   firstname: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   lastname: z.string().min(2, {
//     message: "lastname must be at least 2 characters.",
//   }),
//   mobile: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   alternate_mobile: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   email: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   address1: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   address2: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   pincode: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   city: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
// });

// export function BuyerBillingForm() {
//   const BuyerBillingForm = useForm<z.infer<typeof BuyerDetailFormSchema>>({
//     resolver: zodResolver(BuyerDetailFormSchema),
//     defaultValues: {
//       pickup_address: "",
//       firstname: "",
//       lastname: "",
//       mobile: "",
//       alternate_mobile: "",
//       email: "",
//       country: "",
//       address1: "",
//       address2: "",
//       pincode: "",
//       city: "",
//       state: "",
//     },
//   });

//   const { handleSubmit } = BuyerBillingForm;

//   const onSubmit = (data: z.infer<typeof BuyerDetailFormSchema>) => {
//     console.log("Form Data:", data);
//   };

//   return (
//     <div>
//       <p className="text-xl font-bold my-10">Buyer Billing Details</p>
//       <Form {...BuyerBillingForm}>
//         <form className="space-y-6" onSubmit={handleSubmit(onSubmit)}>
//           <div className="grid grid-cols-1 lg:grid-cols-3 gap-5">
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="First Name"
//               type="text"
//               required
//               name="firstname"
//             />
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="Last Name"
//               type="text"
//               required
//               name="lastname"
//             />
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="Mobile no."
//               type="text"
//               required
//               name="mobile"
//             />
//           </div>
//           <CountrySelect form={BuyerBillingForm} name="country" />
//           <div className="grid grid-cols-1 lg:grid-cols-2 gap-5">
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="House No."
//               type="text"
//               required
//               name="house"
//             />
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="Street Name"
//               type="text"
//               required
//               name="street"
//             />
//           </div>
//           <SimpleFormFields
//             form={BuyerBillingForm}
//             label="Locality"
//             type="text"
//             required
//             name="locality"
//           />

//           <div className="grid gap-5 grid-cols-1 lg:grid-cols-3">
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="Pincode"
//               type="text"
//               required
//               name="pincode"
//             />
//             <SimpleFormFields
//               form={BuyerBillingForm}
//               label="City"
//               type="text"
//               required
//               name="city"
//             />
//             <StateSelect name="state" form={BuyerBillingForm} />
//           </div>
//         </form>
//       </Form>
//     </div>
//   );
// }

// "use client";
// import React, { useState } from "react";
// import { zodResolver } from "@hookform/resolvers/zod";
// import { useForm } from "react-hook-form";
// import { z } from "zod";
// import { Form } from "@/components/ui/form";
// import { AddressSelect, CountrySelect, StateSelect } from "./ComboboxDemo";
// import SimpleFormFields from "./SimpleFormFields";
// import { Button } from "@/components/ui/button";
// import { BuyerBillingForm } from "./BuyerBillingDetails";

// const BuyerDetailFormSchema = z.object({
//   pickup_address: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   country: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   state: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   firstname: z.string().min(2, {
//     message: "firstname must be at least 2 characters.",
//   }),
//   lastname: z.string().min(2, {
//     message: "lastname must be at least 2 characters.",
//   }),
//   mobile: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   alternate_mobile: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   email: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   address1: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   address2: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   pincode: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
//   city: z.string().min(2, {
//     message: "mobile must be at least 2 characters.",
//   }),
// });

// export function BuyerDetailsForm() {
//   const [isBillingAddress, setIsBillingAddress] = useState(false);
//   const handleShowBillinAddress = () => {
//     setIsBillingAddress(!isBillingAddress);
//   };

//   const BuyerDetailsForm = useForm<z.infer<typeof BuyerDetailFormSchema>>({
//     resolver: zodResolver(BuyerDetailFormSchema),
//     defaultValues: {
//       pickup_address: "",
//       firstname: "",
//       lastname: "",
//       mobile: "",
//       alternate_mobile: "",
//       email: "",
//       country: "",
//       address1: "",
//       address2: "",
//       pincode: "",
//       city: "",
//       state: "",
//     },
//   });

//   const { handleSubmit } = BuyerDetailsForm;

//   const onSubmit = (data: z.infer<typeof BuyerDetailFormSchema>) => {
//     console.log("Form Data:", data);
//   };

//   return (
//     <Form {...BuyerDetailsForm}>
//       <label htmlFor="email" className="text-xl font-bold">
//         Select Pickup Address
//       </label>
//       <div className="mb-10"></div>
//       <AddressSelect form={BuyerDetailsForm} name="pickup_address" />

//       <hr className="my-10" />
//       <p className="text-xl font-bold my-10">Buyer Shipping Details</p>
//       <form className="space-y-6" onSubmit={handleSubmit(onSubmit)}>
//         <div className="grid grid-cols-1 lg:grid-cols-3 gap-5">
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="First Name"
//             type="text"
//             required
//             name="firstname"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Last Name"
//             type="text"
//             required
//             name="lastname"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Mobile no."
//             type="text"
//             required
//             name="mobile"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Alternate Mobile no."
//             type="text"
//             name="alternate_mobile"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Email"
//             type="email"
//             required
//             name="email"
//             className="col-span-2"
//           />
//         </div>
//         <CountrySelect form={BuyerDetailsForm} name="country" />

//         <div className="grid grid-cols-1 lg:grid-cols-2 gap-5">
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Address1"
//             type="text"
//             required
//             name="address1"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Landmark"
//             type="text"
//             required
//             name="landmark"
//           />
//         </div>
//         <SimpleFormFields
//           form={BuyerDetailsForm}
//           label="Address2"
//           type="text"
//           required
//           name="address2"
//         />
//         <div className="grid gap-5 grid-cols-1 lg:grid-cols-3">
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="Pincode"
//             type="text"
//             required
//             name="pincode"
//           />
//           <SimpleFormFields
//             form={BuyerDetailsForm}
//             label="City"
//             type="text"
//             required
//             name="city"
//           />
//           <StateSelect form={BuyerDetailsForm} name="state" />
//         </div>
//         <div
//           className="flex gap-2 mt-10 items-center cursor-pointer"
//           onClick={handleShowBillinAddress}
//         >
//           <input type="checkbox" className="w-4 h-4 cursor-pointer" />
//           <p className="text-sm font-medium">
//             Shipping & Billing Address are same.
//           </p>
//         </div>
//         {isBillingAddress && <BuyerBillingForm />}
//         <div className="flex justify-end my-10">
//           <Button variant="default" size="lg" className="bg-blue-500">
//             Continue
//           </Button>
//         </div>
//       </form>
//     </Form>
//   );
// }

// import React from "react";
// import BreadCrumb from "./shadcnComponents/BreadCrumb";
// import Stepper from "./forms/Stepper";

// const sideStepperArray = [
//   {
//     number: "1",
//     text: "Buyer Details",
//   },
//   {
//     number: "2",
//     text: "Order Details",
//   },
//   {
//     number: "3",
//     text: "Shipping Partner",
//   },
//   {
//     number: "4",
//     text: "Place Order",
//   },
// ];

// const Layout = () => {
//   return (
//     <div className="bg-gray-50 min-h-screen pt-5 pb-20 p-2 lg:px-28">
//       <BreadCrumb />
//       <div className="flex flex-col lg:flex-row gap-2 lg:gap-10 mt-4">
//         <div className="w-full flex flex-col gap-y-10 px-5 justify-center h-40 lg:min-h-screen lg:w-1/5 bg-white rounded-lg">
//           {sideStepperArray.map((item, index) => (
//             <SideStepper text={item.text} step={item.number} key={index} />
//           ))}
//         </div>
//         <div className="w-full lg:w-4/5 bg-white max-h-max rounded-lg p-4 md:p-8 lg:p-12">
//           {/* <BuyerDetailsForm /> */}
//           <Stepper />
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Layout;

// interface SideStepperProps {
//   step: string;
//   text: string;
// }
// const SideStepper = ({ step, text }: SideStepperProps) => {
//   return (
//     <div className="flex items-center gap-x-5">
//       <div className="bg-blue-400 text-white px-3 py-1 rounded-md">{step}</div>
//       <p>{text}</p>
//     </div>
//   );
// };